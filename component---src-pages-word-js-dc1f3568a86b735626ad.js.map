{"version":3,"sources":["webpack:///./src/pages/word.js"],"names":["word","location","queries","search","parseQueries","useState","response","setResponse","renderNoWord","setRenderNoWord","visible","setVisible","formType","defaultValues","setDefaultValues","useEffect","a","getWord","words","data","length","className","showAddWordModal","value","wordClass","definitions","definition","index","examples","igbo","english","title","isOpen","onRequestClose"],"mappings":"0SAsIeA,UA1HF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACRC,GAAUD,aAAA,EAAAA,EAAUE,QAASC,YAAaH,EAASE,QAAU,GADtC,EAEGE,mBAAS,MAAlCC,EAFsB,KAEZC,EAFY,OAGWF,oBAAS,GAA1CG,EAHsB,KAGRC,EAHQ,OAICJ,oBAAS,GAAhCK,EAJsB,KAIbC,EAJa,OAKGN,qBAAzBO,EALsB,aAMaP,mBAAS,KAA5CQ,EANsB,KAMPC,EANO,KAgD7B,OAXAC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEACsBC,YAAQf,EAAQF,MADtC,QACOkB,EADP,OAC6CC,MAClCC,OACRb,EAAYW,EAAM,KAElBT,GAAgB,GAChBF,EAAY,CAAEP,KAAME,EAAQF,QAN/B,0CAAD,KASC,KACIM,aAAA,EAAAA,EAAUN,MACf,yBAAKqB,UAAU,kBACb,kBAAC,IAAD,MACA,kBAAC,IAAD,MACCb,EACC,kBAAC,IAAD,CACER,KAAME,EAAQF,KACdsB,iBA/CU,WAChBX,GAAW,IA+CLG,iBAAkB,SAACS,GAAD,OAAWT,EAAiBS,MAGhD,yBAAKF,UAAU,qCACb,yBAAKA,UAAU,0DACb,6BACE,wBAAIA,UAAU,uCAAd,QACA,wBAAIA,UAAU,uCAAuCf,aAArD,EAAqDA,EAAUN,MAC/D,wBAAIqB,UAAU,uCAAd,kBACA,wBAAIA,UAAU,uCAAuCf,aAArD,EAAqDA,EAAUkB,YAEjE,6BACE,wBAAIH,UAAU,uCAAd,eACCf,EAASmB,YAAYL,OAAS,IAAId,EAASmB,aAAa,SAACC,EAAYC,GAAb,OACvD,wBAAIN,UAAU,yBACZ,0BAAMA,UAAU,sBACVM,EAAQ,EADd,KAGCD,MAEA,OAmBL,KACJ,yBAAKL,UAAU,iCACf,wBAAIA,UAAU,0BAAd,YACCf,EAASsB,SAASR,OAAS,IAAKd,EAASsB,UAAW,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACnD,yBAAKT,UAAU,QACb,wBAAIA,UAAU,mCAAmCQ,GACjD,wBAAIR,UAAU,yBAAyBS,OAEtC,eAGT,kBAAC,IAAD,CACEC,MAAoB,SAAbnB,EAAsB,sBAAqC,YAAbA,EAAyB,uBAAyB,KACvGoB,OAAQtB,EACRuB,eAjGe,WACnBtB,GAAW,IAiGPU,UAAU,mBAEI,SAAbT,EACC,kBAAC,IAAD,CAASC,cAAeA,IACT,YAAbD,EACF,kBAAC,IAAD,CAAYC,cAAeA,IACzB,OAGN","file":"component---src-pages-word-js-dc1f3568a86b735626ad.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { map } from 'lodash';\nimport { getWord } from '../API';\nimport Navbar from '../components/Navbar';\nimport NoWord from '../components/NoWord';\nimport Modal from '../components/Modal';\nimport Select from '../components/Select';\nimport SearchBar from '../components/SearchBar';\nimport AddWord from '../forms/AddWord';\nimport AddExample from '../forms/AddExample';\nimport parseQueries from '../utils/parseQueries';\n\nconst word = ({ location }) => {\n  const queries = location?.search ? parseQueries(location.search) : {};\n  const [response, setResponse] = useState(null);\n  const [renderNoWord, setRenderNoWord] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [formType, setFormType] = useState();\n  const [defaultValues, setDefaultValues] = useState({});\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const options = [\n    {\n      value: 'editWord',\n      label: 'üìù Suggest an Edit',\n      onSelect: () => {\n        setDefaultValues(response);\n        setFormType('word');\n        setVisible(true);\n      },\n    },\n    {\n      value: 'createExample',\n      label: 'üìö Create an Example',\n      onSelect: () => {\n        setDefaultValues(response);\n        setFormType('example');\n        setVisible(true);\n      },\n    },\n  ];\n\n  useEffect(() => {\n    (async () => {\n      const words = (await getWord(queries.word)).data;\n      if (words.length) {\n        setResponse(words[0]);\n      } else {\n        setRenderNoWord(true);\n        setResponse({ word: queries.word });\n      }\n    })();\n  }, []);\n  return response?.word ? (\n    <div className=\"page-container\">\n      <Navbar />\n      <SearchBar />\n      {renderNoWord ? (\n        <NoWord\n          word={queries.word}\n          showAddWordModal={showModal}\n          setDefaultValues={(value) => setDefaultValues(value)}\n        />\n      ) : (\n        <div className=\"responsive-container px-2 lg:px-5\">\n          <div className=\"flex flex-col lg:flex-row justify-between mt-2 lg:mt-6\">\n            <div>\n              <h1 className=\"text-4xl text-gray-800 mt-3 lg:mt-1\">Word</h1>\n              <h2 className=\"text-2xl text-gray-800 mt-3 lg:mt-1\">{response?.word}</h2>\n              <h1 className=\"text-4xl text-gray-800 mt-3 lg:mt-1\">Part of Speech</h1>\n              <h2 className=\"text-2xl text-gray-800 mt-3 lg:mt-1\">{response?.wordClass}</h2>\n            </div>\n            <div>\n              <h1 className=\"text-4xl text-gray-800 mt-3 lg:mt-1\">Definitions</h1>\n              {response.definitions.length ? map(response.definitions, (definition, index) => (\n                <h2 className=\"text-xl text-gray-800\">\n                  <span className=\"text-gray-600 mr-2\">\n                    {`${index + 1}.`}\n                  </span>\n                  {definition}\n                </h2>\n              )) : null}\n            </div>\n          </div>\n          {process.env.NODE_ENV !== 'production' ? (\n            <div className=\"flex w-full justify-start lg:justify-end\">\n              {/* TODO: Abstract this select + modal logic into it's own component */}\n              <Select\n                className=\"w-32 h-8 mt-5\"\n                ContainerComponent={() => (\n                  <div className=\"flex space-x-2 justify-center items-center\">\n                    <div>\n                      <span role=\"img\" aria-label=\"Hand writing with pen\">‚úçüèæ</span>\n                      {' Actions'}\n                    </div>\n                  </div>\n                )}\n                options={options}\n              />\n            </div>\n          ) : null}\n          <div className=\"h-px bg-gray-300 w-full my-6\" />\n          <h1 className=\"text-4xl text-gray-800\">Examples</h1>\n          {response.examples.length ? map((response.examples), ({ igbo, english }) => (\n            <div className=\"my-5\">\n              <h2 className=\"text-xl font-bold text-gray-800\">{igbo}</h2>\n              <h2 className=\"text-xl text-gray-600\">{english}</h2>\n            </div>\n          )) : 'No examples'}\n        </div>\n      )}\n      <Modal\n        title={formType === 'word' ? 'Suggest a Word Edit' : formType === 'example' ? 'Create a New Example' : null}\n        isOpen={visible}\n        onRequestClose={handleCancel}\n        className=\"modal-container\"\n      >\n        {formType === 'word' ? (\n          <AddWord defaultValues={defaultValues} />\n        ) : formType === 'example' ? (\n          <AddExample defaultValues={defaultValues} />\n        ) : null}\n      </Modal>\n    </div>\n  ) : null;\n};\n\nexport default word;\n"],"sourceRoot":""}