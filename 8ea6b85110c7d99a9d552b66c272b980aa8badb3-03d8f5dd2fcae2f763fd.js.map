{"version":3,"sources":["webpack:///./node_modules/urlencode/lib/urlencode.js","webpack:///./node_modules/iconv-lite/encodings/internal.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///./src/assets/icons/downchevron.svg","webpack:///./node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///./src/utils/parseQueries.js","webpack:///./src/forms/AddExample.js","webpack:///./src/hooks/useEventListener.js","webpack:///./src/components/Select.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///./src/components/NoWord.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/iconv-lite/encodings/index.js","webpack:///./node_modules/iconv-lite/encodings/utf16.js","webpack:///./node_modules/iconv-lite/lib/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/iconv-lite/lib/bom-handling.js","webpack:///./node_modules/safer-buffer/safer.js","webpack:///./node_modules/iconv-lite/encodings/utf7.js"],"names":["iconv","isUTF8","charset","toLowerCase","encode","str","encodeURIComponent","buf","encodeStr","ch","i","length","toString","toUpperCase","decode","decodeURIComponent","bytes","push","parseInt","substring","charCodeAt","Buffer","has","obj","prop","Object","prototype","hasOwnProperty","call","encodeComponent","item","String","test","stringify","prefix","options","Array","isArray","stringifyArray","stringifyObject","TypeError","stringifyString","arr","ret","join","key","keys","len","module","exports","parse","qs","sep","eq","regexp","split","maxKeys","kstr","vstr","k","v","x","replace","idx","indexOf","substr","e","InternalCodec","codecOptions","this","enc","encodingName","bomAware","encoder","InternalEncoderBase64","InternalEncoderCesu8","from","decoder","InternalDecoderCesu8","defaultCharUnicode","utf8","type","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","codec","prevStr","acc","contBytes","accBytes","end","write","completeQuads","slice","alloc","bufIdx","charCode","res","curByte","fromCharCode","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","revLookup","fromByteArray","uint8","extraBytes","parts","len2","encodeChunk","lookup","Uint8Array","code","Error","start","num","output","table","encodeAdd","encodeSkipVals","to","concat","gb18030","React","Downchevron","props","createElement","defaultProps","default","parseQueries","queries","filter","query","reduce","queryMap","keyValuePair","urlencode","AddExample","onRequestClose","onSuccess","onFailure","defaultValues","useForm","handleSubmit","getValues","reset","control","errors","data-test","onSubmit","data","cleanedData","associatedWords","id","postExampleSuggestion","then","subtitle","catch","className","word","as","placeholder","name","defaultValue","igbo","english","onClick","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","event","removeEventListener","Select","ContainerComponent","useState","isMenuVisible","setIsMenuVisible","selectRef","contains","target","document","getElementsByTagName","ref","label","onSelect","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","defaultCharSingleByte","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","isEncoding","encoding","nb","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","allocUnsafe","utf8CheckByte","byte","p","r","self","utf8CheckExtraBytes","undefined","copy","c","n","total","j","utf8CheckIncomplete","buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","allocUnsafeSlow","create","size","fill","SlowBuffer","_dbcs","DBCSCodec","UNASSIGNED_NODE","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","val","_fillEncodeTable","uChar","_setEncodeChar","defCharSB","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","l","mid","Math","floor","_getDecodeTrieNode","addr","node","chunk","curAddr","writeTable","part","codeTrail","seq","m","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","mbCode","nextChar","resCode","subtable","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","NoWord","showAddWordModal","setDefaultValues","read","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","pow","value","rt","abs","isNaN","log","LN2","modules","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","addBOM","getEncoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","min","utf16be","buf2","utf16","getDecoder","trail","bomHandling","encodings","skipDecodeWarning","console","error","encodingExists","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","PrependBOM","stripBOM","StripBOM","nodeVer","process","versions","nodeVerArr","map","Number","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","ArrayBuffer","array","byteOffset","fromArrayLike","fromArrayBuffer","string","actual","fromString","isBuffer","checked","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","apply","decodeCodePointsArray","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","_isBuffer","compare","a","y","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","trim","stringtrim","base64clean","PrependBOMWrapper","StripBOMWrapper","pass","safer","Safer","kStringMaxLength","binding","constants","MAX_LENGTH","MAX_STRING_LENGTH","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","bind","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","base64IMAPChars"],"mappings":"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","file":"8ea6b85110c7d99a9d552b66c272b980aa8badb3-03d8f5dd2fcae2f763fd.js","sourcesContent":["/**!\n * urlencode - lib/urlencode.js\n *\n * MIT Licensed\n *\n * Authors:\n *   fengmk2 <fengmk2@gmail.com> (http://fengmk2.com)\n */\n\"use strict\";\n/**\n * Module dependencies.\n */\n\nvar iconv = require('iconv-lite');\n\nfunction isUTF8(charset) {\n  if (!charset) {\n    return true;\n  }\n\n  charset = charset.toLowerCase();\n  return charset === 'utf8' || charset === 'utf-8';\n}\n\nfunction encode(str, charset) {\n  if (isUTF8(charset)) {\n    return encodeURIComponent(str);\n  }\n\n  var buf = iconv.encode(str, charset);\n  var encodeStr = '';\n  var ch = '';\n\n  for (var i = 0; i < buf.length; i++) {\n    ch = buf[i].toString('16');\n\n    if (ch.length === 1) {\n      ch = '0' + ch;\n    }\n\n    encodeStr += '%' + ch;\n  }\n\n  encodeStr = encodeStr.toUpperCase();\n  return encodeStr;\n}\n\nfunction decode(str, charset) {\n  if (isUTF8(charset)) {\n    return decodeURIComponent(str);\n  }\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length;) {\n    if (str[i] === '%') {\n      i++;\n      bytes.push(parseInt(str.substring(i, i + 2), 16));\n      i += 2;\n    } else {\n      bytes.push(str.charCodeAt(i));\n      i++;\n    }\n  }\n\n  var buf = new Buffer(bytes);\n  return iconv.decode(buf, charset);\n}\n\nfunction parse(qs, sep, eq, options) {\n  if (typeof sep === 'object') {\n    // parse(qs, options)\n    options = sep;\n    sep = null;\n  }\n\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n  var maxKeys = 1000;\n  var charset = null;\n\n  if (options) {\n    if (typeof options.maxKeys === 'number') {\n      maxKeys = options.maxKeys;\n    }\n\n    if (typeof options.charset === 'string') {\n      charset = options.charset;\n    }\n  }\n\n  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count\n\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20');\n    var idx = x.indexOf(eq);\n    var kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    if (kstr && kstr.indexOf('%') >= 0) {\n      try {\n        k = decode(kstr, charset);\n      } catch (e) {\n        k = kstr;\n      }\n    } else {\n      k = kstr;\n    }\n\n    if (vstr && vstr.indexOf('%') >= 0) {\n      try {\n        v = decode(vstr, charset);\n      } catch (e) {\n        v = vstr;\n      }\n    } else {\n      v = vstr;\n    }\n\n    if (!has(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n}\n\nfunction has(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction isASCII(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction encodeComponent(item, charset) {\n  item = String(item);\n\n  if (isASCII(item)) {\n    item = encodeURIComponent(item);\n  } else {\n    item = encode(item, charset);\n  }\n\n  return item;\n}\n\nvar stringify = function stringify(obj, prefix, options) {\n  if (typeof prefix !== 'string') {\n    options = prefix || {};\n    prefix = null;\n  }\n\n  var charset = options.charset || 'utf-8';\n\n  if (Array.isArray(obj)) {\n    return stringifyArray(obj, prefix, options);\n  } else if ('[object Object]' === {}.toString.call(obj)) {\n    return stringifyObject(obj, prefix, options);\n  } else if ('string' === typeof obj) {\n    return stringifyString(obj, prefix, options);\n  } else {\n    return prefix + '=' + encodeComponent(String(obj), charset);\n  }\n};\n\nfunction stringifyString(str, prefix, options) {\n  if (!prefix) {\n    throw new TypeError('stringify expects an object');\n  }\n\n  var charset = options.charset;\n  return prefix + '=' + encodeComponent(str, charset);\n}\n\nfunction stringifyArray(arr, prefix, options) {\n  var ret = [];\n\n  if (!prefix) {\n    throw new TypeError('stringify expects an object');\n  }\n\n  for (var i = 0; i < arr.length; i++) {\n    ret.push(stringify(arr[i], prefix + '[' + i + ']', options));\n  }\n\n  return ret.join('&');\n}\n\nfunction stringifyObject(obj, prefix, options) {\n  var ret = [];\n  var keys = Object.keys(obj);\n  var key;\n  var charset = options.charset;\n\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    key = keys[i];\n\n    if ('' === key) {\n      continue;\n    }\n\n    if (null === obj[key]) {\n      ret.push(encode(key, charset) + '=');\n    } else {\n      ret.push(stringify(obj[key], prefix ? prefix + '[' + encodeComponent(key, charset) + ']' : encodeComponent(key, charset), options));\n    }\n  }\n\n  return ret.join('&');\n}\n\nmodule.exports = encode;\nmodule.exports.encode = encode;\nmodule.exports.decode = decode;\nmodule.exports.parse = parse;\nmodule.exports.stringify = stringify;","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // Export Node.js internal encodings.\n\n\nmodule.exports = {\n  // Encodings\n  utf8: {\n    type: \"_internal\",\n    bomAware: true\n  },\n  cesu8: {\n    type: \"_internal\",\n    bomAware: true\n  },\n  unicode11utf8: \"utf8\",\n  ucs2: {\n    type: \"_internal\",\n    bomAware: true\n  },\n  utf16le: \"ucs2\",\n  binary: {\n    type: \"_internal\"\n  },\n  base64: {\n    type: \"_internal\"\n  },\n  hex: {\n    type: \"_internal\"\n  },\n  // Codec.\n  _internal: InternalCodec\n}; //------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n  this.enc = codecOptions.encodingName;\n  this.bomAware = codecOptions.bomAware;\n  if (this.enc === \"base64\") this.encoder = InternalEncoderBase64;else if (this.enc === \"cesu8\") {\n    this.enc = \"utf8\"; // Use utf8 for decoding.\n\n    this.encoder = InternalEncoderCesu8; // Add decoder for versions of Node not supporting CESU-8\n\n    if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n      this.decoder = InternalDecoderCesu8;\n      this.defaultCharUnicode = iconv.defaultCharUnicode;\n    }\n  }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder; //------------------------------------------------------------------------------\n// We use node.js internal decoder. Its signature is the same as ours.\n\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n  StringDecoder.prototype.end = function () {};\n\nfunction InternalDecoder(options, codec) {\n  StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype; //------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n  this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function (str) {\n  return Buffer.from(str, this.enc);\n};\n\nInternalEncoder.prototype.end = function () {}; //------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\n\nfunction InternalEncoderBase64(options, codec) {\n  this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function (str) {\n  str = this.prevStr + str;\n  var completeQuads = str.length - str.length % 4;\n  this.prevStr = str.slice(completeQuads);\n  str = str.slice(0, completeQuads);\n  return Buffer.from(str, \"base64\");\n};\n\nInternalEncoderBase64.prototype.end = function () {\n  return Buffer.from(this.prevStr, \"base64\");\n}; //------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\n\nfunction InternalEncoderCesu8(options, codec) {}\n\nInternalEncoderCesu8.prototype.write = function (str) {\n  var buf = Buffer.alloc(str.length * 3),\n      bufIdx = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    var charCode = str.charCodeAt(i); // Naive implementation, but it works because CESU-8 is especially easy\n    // to convert from UTF-16 (which all JS strings are encoded in).\n\n    if (charCode < 0x80) buf[bufIdx++] = charCode;else if (charCode < 0x800) {\n      buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n      buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n    } else {\n      // charCode will always be < 0x10000 in javascript.\n      buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n      buf[bufIdx++] = 0x80 + (charCode >>> 6 & 0x3f);\n      buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n    }\n  }\n\n  return buf.slice(0, bufIdx);\n};\n\nInternalEncoderCesu8.prototype.end = function () {}; //------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\n\nfunction InternalDecoderCesu8(options, codec) {\n  this.acc = 0;\n  this.contBytes = 0;\n  this.accBytes = 0;\n  this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function (buf) {\n  var acc = this.acc,\n      contBytes = this.contBytes,\n      accBytes = this.accBytes,\n      res = '';\n\n  for (var i = 0; i < buf.length; i++) {\n    var curByte = buf[i];\n\n    if ((curByte & 0xC0) !== 0x80) {\n      // Leading byte\n      if (contBytes > 0) {\n        // Previous code is invalid\n        res += this.defaultCharUnicode;\n        contBytes = 0;\n      }\n\n      if (curByte < 0x80) {\n        // Single-byte code\n        res += String.fromCharCode(curByte);\n      } else if (curByte < 0xE0) {\n        // Two-byte code\n        acc = curByte & 0x1F;\n        contBytes = 1;\n        accBytes = 1;\n      } else if (curByte < 0xF0) {\n        // Three-byte code\n        acc = curByte & 0x0F;\n        contBytes = 2;\n        accBytes = 1;\n      } else {\n        // Four or more are not supported for CESU-8.\n        res += this.defaultCharUnicode;\n      }\n    } else {\n      // Continuation byte\n      if (contBytes > 0) {\n        // We're waiting for it.\n        acc = acc << 6 | curByte & 0x3f;\n        contBytes--;\n        accBytes++;\n\n        if (contBytes === 0) {\n          // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n          if (accBytes === 2 && acc < 0x80 && acc > 0) res += this.defaultCharUnicode;else if (accBytes === 3 && acc < 0x800) res += this.defaultCharUnicode;else // Actually add character.\n            res += String.fromCharCode(acc);\n        }\n      } else {\n        // Unexpected continuation byte\n        res += this.defaultCharUnicode;\n      }\n    }\n  }\n\n  this.acc = acc;\n  this.contBytes = contBytes;\n  this.accBytes = accBytes;\n  return res;\n};\n\nInternalDecoderCesu8.prototype.end = function () {\n  var res = 0;\n  if (this.contBytes > 0) res += this.defaultCharUnicode;\n  return res;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","\"use strict\"; // Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n  // == Japanese/ShiftJIS ====================================================\n  // All japanese encodings are based on JIS X set of standards:\n  // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n  // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n  //              Has several variations in 1978, 1983, 1990 and 1997.\n  // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n  // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n  //              2 planes, first is superset of 0208, second - revised 0212.\n  //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n  // Byte encodings are:\n  //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n  //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n  //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n  //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n  //               0x00-0x7F       - lower part of 0201\n  //               0x8E, 0xA1-0xDF - upper part of 0201\n  //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n  //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n  //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n  //               Used as-is in ISO2022 family.\n  //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n  //                0201-1976 Roman, 0208-1978, 0208-1983.\n  //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n  //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n  //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n  //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n  //\n  // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n  //\n  // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n  'shiftjis': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/shiftjis.json');\n    },\n    encodeAdd: {\n      \"\\xA5\": 0x5C,\n      \"\\u203E\": 0x7E\n    },\n    encodeSkipVals: [{\n      from: 0xED40,\n      to: 0xF940\n    }]\n  },\n  'csshiftjis': 'shiftjis',\n  'mskanji': 'shiftjis',\n  'sjis': 'shiftjis',\n  'windows31j': 'shiftjis',\n  'ms31j': 'shiftjis',\n  'xsjis': 'shiftjis',\n  'windows932': 'shiftjis',\n  'ms932': 'shiftjis',\n  '932': 'shiftjis',\n  'cp932': 'shiftjis',\n  'eucjp': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/eucjp.json');\n    },\n    encodeAdd: {\n      \"\\xA5\": 0x5C,\n      \"\\u203E\": 0x7E\n    }\n  },\n  // TODO: KDDI extension to Shift_JIS\n  // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n  // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n  // == Chinese/GBK ==========================================================\n  // http://en.wikipedia.org/wiki/GBK\n  // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n  // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n  'gb2312': 'cp936',\n  'gb231280': 'cp936',\n  'gb23121980': 'cp936',\n  'csgb2312': 'cp936',\n  'csiso58gb231280': 'cp936',\n  'euccn': 'cp936',\n  // Microsoft's CP936 is a subset and approximation of GBK.\n  'windows936': 'cp936',\n  'ms936': 'cp936',\n  '936': 'cp936',\n  'cp936': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp936.json');\n    }\n  },\n  // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n  'gbk': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp936.json').concat(require('./tables/gbk-added.json'));\n    }\n  },\n  'xgbk': 'gbk',\n  'isoir58': 'gbk',\n  // GB18030 is an algorithmic extension of GBK.\n  // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n  // http://icu-project.org/docs/papers/gb18030.html\n  // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n  // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n  'gb18030': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp936.json').concat(require('./tables/gbk-added.json'));\n    },\n    gb18030: function gb18030() {\n      return require('./tables/gb18030-ranges.json');\n    },\n    encodeSkipVals: [0x80],\n    encodeAdd: {\n      '€': 0xA2E3\n    }\n  },\n  'chinese': 'gb18030',\n  // == Korean ===============================================================\n  // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n  'windows949': 'cp949',\n  'ms949': 'cp949',\n  '949': 'cp949',\n  'cp949': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp949.json');\n    }\n  },\n  'cseuckr': 'cp949',\n  'csksc56011987': 'cp949',\n  'euckr': 'cp949',\n  'isoir149': 'cp949',\n  'korean': 'cp949',\n  'ksc56011987': 'cp949',\n  'ksc56011989': 'cp949',\n  'ksc5601': 'cp949',\n  // == Big5/Taiwan/Hong Kong ================================================\n  // There are lots of tables for Big5 and cp950. Please see the following links for history:\n  // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n  // Variations, in roughly number of defined chars:\n  //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n  //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n  //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n  //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n  //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n  //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n  //    Plus, it has 4 combining sequences.\n  //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n  //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n  //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n  //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n  //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n  //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n  //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n  //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n  // \n  // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n  // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n  'windows950': 'cp950',\n  'ms950': 'cp950',\n  '950': 'cp950',\n  'cp950': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp950.json');\n    }\n  },\n  // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n  'big5': 'big5hkscs',\n  'big5hkscs': {\n    type: '_dbcs',\n    table: function table() {\n      return require('./tables/cp950.json').concat(require('./tables/big5-added.json'));\n    },\n    encodeSkipVals: [0xa2cc]\n  },\n  'cnbig5': 'big5hkscs',\n  'csbig5': 'big5hkscs',\n  'xxbig5': 'big5hkscs'\n};","var React = require('react');\n\nfunction Downchevron (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M4.5 6.5l3 3 3-3\",\"stroke\":\"#2d3748\",\"strokeLinecap\":\"square\"}));\n}\n\nDownchevron.defaultProps = {\"viewBox\":\"0 0 15 15\",\"fill\":\"none\",\"width\":\"15\",\"height\":\"15\"};\n\nmodule.exports = Downchevron;\n\nDownchevron.default = Downchevron;\n","\"use strict\"; // Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n  // Not supported by iconv, not sure why.\n  \"10029\": \"maccenteuro\",\n  \"maccenteuro\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n  },\n  \"808\": \"cp808\",\n  \"ibm808\": \"cp808\",\n  \"cp808\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n  },\n  \"mik\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  // Aliases of generated encodings.\n  \"ascii8bit\": \"ascii\",\n  \"usascii\": \"ascii\",\n  \"ansix34\": \"ascii\",\n  \"ansix341968\": \"ascii\",\n  \"ansix341986\": \"ascii\",\n  \"csascii\": \"ascii\",\n  \"cp367\": \"ascii\",\n  \"ibm367\": \"ascii\",\n  \"isoir6\": \"ascii\",\n  \"iso646us\": \"ascii\",\n  \"iso646irv\": \"ascii\",\n  \"us\": \"ascii\",\n  \"latin1\": \"iso88591\",\n  \"latin2\": \"iso88592\",\n  \"latin3\": \"iso88593\",\n  \"latin4\": \"iso88594\",\n  \"latin5\": \"iso88599\",\n  \"latin6\": \"iso885910\",\n  \"latin7\": \"iso885913\",\n  \"latin8\": \"iso885914\",\n  \"latin9\": \"iso885915\",\n  \"latin10\": \"iso885916\",\n  \"csisolatin1\": \"iso88591\",\n  \"csisolatin2\": \"iso88592\",\n  \"csisolatin3\": \"iso88593\",\n  \"csisolatin4\": \"iso88594\",\n  \"csisolatincyrillic\": \"iso88595\",\n  \"csisolatinarabic\": \"iso88596\",\n  \"csisolatingreek\": \"iso88597\",\n  \"csisolatinhebrew\": \"iso88598\",\n  \"csisolatin5\": \"iso88599\",\n  \"csisolatin6\": \"iso885910\",\n  \"l1\": \"iso88591\",\n  \"l2\": \"iso88592\",\n  \"l3\": \"iso88593\",\n  \"l4\": \"iso88594\",\n  \"l5\": \"iso88599\",\n  \"l6\": \"iso885910\",\n  \"l7\": \"iso885913\",\n  \"l8\": \"iso885914\",\n  \"l9\": \"iso885915\",\n  \"l10\": \"iso885916\",\n  \"isoir14\": \"iso646jp\",\n  \"isoir57\": \"iso646cn\",\n  \"isoir100\": \"iso88591\",\n  \"isoir101\": \"iso88592\",\n  \"isoir109\": \"iso88593\",\n  \"isoir110\": \"iso88594\",\n  \"isoir144\": \"iso88595\",\n  \"isoir127\": \"iso88596\",\n  \"isoir126\": \"iso88597\",\n  \"isoir138\": \"iso88598\",\n  \"isoir148\": \"iso88599\",\n  \"isoir157\": \"iso885910\",\n  \"isoir166\": \"tis620\",\n  \"isoir179\": \"iso885913\",\n  \"isoir199\": \"iso885914\",\n  \"isoir203\": \"iso885915\",\n  \"isoir226\": \"iso885916\",\n  \"cp819\": \"iso88591\",\n  \"ibm819\": \"iso88591\",\n  \"cyrillic\": \"iso88595\",\n  \"arabic\": \"iso88596\",\n  \"arabic8\": \"iso88596\",\n  \"ecma114\": \"iso88596\",\n  \"asmo708\": \"iso88596\",\n  \"greek\": \"iso88597\",\n  \"greek8\": \"iso88597\",\n  \"ecma118\": \"iso88597\",\n  \"elot928\": \"iso88597\",\n  \"hebrew\": \"iso88598\",\n  \"hebrew8\": \"iso88598\",\n  \"turkish\": \"iso88599\",\n  \"turkish8\": \"iso88599\",\n  \"thai\": \"iso885911\",\n  \"thai8\": \"iso885911\",\n  \"celtic\": \"iso885914\",\n  \"celtic8\": \"iso885914\",\n  \"isoceltic\": \"iso885914\",\n  \"tis6200\": \"tis620\",\n  \"tis62025291\": \"tis620\",\n  \"tis62025330\": \"tis620\",\n  \"10000\": \"macroman\",\n  \"10006\": \"macgreek\",\n  \"10007\": \"maccyrillic\",\n  \"10079\": \"maciceland\",\n  \"10081\": \"macturkish\",\n  \"cspc8codepage437\": \"cp437\",\n  \"cspc775baltic\": \"cp775\",\n  \"cspc850multilingual\": \"cp850\",\n  \"cspcp852\": \"cp852\",\n  \"cspc862latinhebrew\": \"cp862\",\n  \"cpgr\": \"cp869\",\n  \"msee\": \"cp1250\",\n  \"mscyrl\": \"cp1251\",\n  \"msansi\": \"cp1252\",\n  \"msgreek\": \"cp1253\",\n  \"msturk\": \"cp1254\",\n  \"mshebr\": \"cp1255\",\n  \"msarab\": \"cp1256\",\n  \"winbaltrim\": \"cp1257\",\n  \"cp20866\": \"koi8r\",\n  \"20866\": \"koi8r\",\n  \"ibm878\": \"koi8r\",\n  \"cskoi8r\": \"koi8r\",\n  \"cp21866\": \"koi8u\",\n  \"21866\": \"koi8u\",\n  \"ibm1168\": \"koi8u\",\n  \"strk10482002\": \"rk1048\",\n  \"tcvn5712\": \"tcvn\",\n  \"tcvn57121\": \"tcvn\",\n  \"gb198880\": \"iso646cn\",\n  \"cn\": \"iso646cn\",\n  \"csiso14jisc6220ro\": \"iso646jp\",\n  \"jisc62201969ro\": \"iso646jp\",\n  \"jp\": \"iso646jp\",\n  \"cshproman8\": \"hproman8\",\n  \"r8\": \"hproman8\",\n  \"roman8\": \"hproman8\",\n  \"xroman8\": \"hproman8\",\n  \"ibm1051\": \"hproman8\",\n  \"mac\": \"macintosh\",\n  \"csmacintosh\": \"macintosh\"\n};","import urlencode from 'urlencode';\n/* Takes the query string and transform it into an object */\nconst parseQueries = (queries) => {\n  const queriesMap = queries\n    .split(/(\\?|&)/)\n    .filter((query) => query !== '' && query !== '?' && query !== '&')\n    .reduce((queryMap, query) => {\n      const keyValuePair = query.split('=');\n      return { ...queryMap, [keyValuePair[0]]: urlencode.decode(keyValuePair[1]) };\n    }, {});\n  return queriesMap;\n};\n\nexport default parseQueries;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport Email from '../components/Email';\nimport { postExampleSuggestion } from '../API';\n\nconst AddExample = ({\n  onRequestClose,\n  onSuccess,\n  onFailure,\n  defaultValues,\n}) => {\n  const {\n    handleSubmit,\n    getValues,\n    reset,\n    control,\n    errors,\n  } = useForm();\n\n  const onSubmit = (data) => {\n    const cleanedData = {\n      ...data,\n      associatedWords: defaultValues?.id ? [defaultValues?.id] : [],\n    };\n    postExampleSuggestion(cleanedData)\n      .then(() => {\n        reset();\n        onSuccess({ subtitle: 'You\\'re example has been sent for review by editors.' });\n      })\n      .catch(() => {\n        onFailure({ subtitle: 'Double check you have entered all required information.' });\n      });\n  };\n\n  return (\n    <form data-test=\"example-form\" onSubmit={handleSubmit(onSubmit)}>\n      <p className=\"mt-2\">\n        By suggesting a new example, you are helping in advancing learning materials for the Igbo language.\n      </p>\n      <p className=\"mt-2\">\n        {`If only Igbo is provided, then an English translation will be added later, \n        and the same will happen if an English sentence if sent.`}\n      </p>\n      <p className=\"mt-2 font-bold\">\n        {'Please provide an example, either in Igbo, or English, or both, that contains the associated word '}\n        <span className=\"font-bold underline\">{defaultValues?.word}</span>\n      </p>\n      <h2 className=\"form-header\">Igbo</h2>\n      <Controller\n        as={(\n          <input\n            className=\"form-input\"\n            placeholder={`Example in Igbo using ${defaultValues?.word}`}\n            data-test=\"igbo-input\"\n          />\n        )}\n        name=\"igbo\"\n        control={control}\n        defaultValue={defaultValues?.igbo || getValues().igbo}\n      />\n      {errors.igbo && (\n        <span className=\"error\">Either the Igbo or English sentence if required</span>\n      )}\n      <h2 className=\"form-header\">English</h2>\n      <Controller\n        as={(\n          <input\n            className=\"form-input\"\n            placeholder={`Example in English using ${defaultValues?.word}`}\n            data-test=\"english-input\"\n          />\n        )}\n        name=\"english\"\n        control={control}\n        defaultValue={defaultValues?.english || getValues().english}\n      />\n      <Email defaultValues={defaultValues} getValues={getValues} control={control} />\n      <div className=\"flex flex-col items-start lg:items-end\">\n        <div className=\"flex flex-col w-full lg:flex-row-reverse lg:justify-start\">\n          <button type=\"submit\" className=\"button primary-button\">Submit</button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => {\n              reset();\n              onRequestClose();\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n        <p className=\"font-bold mt-3 text-center lg:text-right\">\n          {`By clicking 'Submit' your example suggestion will be sent \n          to our editors to be reviewed and later approved or denied.`}\n        </p>\n        <p className=\"font-bold mt-3 underline text-center lg:text-right\">\n          Before submitting, double check your edits.\n        </p>\n      </div>\n    </form>\n  );\n};\n\nAddExample.propTypes = {\n  onRequestClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func,\n  onFailure: PropTypes.func,\n  defaultValues: PropTypes.objectOf(['word']),\n};\n\nAddExample.defaultProps = {\n  onSuccess: () => {},\n  onFailure: () => {},\n  defaultValues: {},\n};\n\nexport default AddExample;\n","import { useRef, useEffect } from 'react';\n\nconst useEventListener = (eventName, handler, element = window) => {\n  const savedHandler = useRef();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    const isSupported = element && element.addEventListener;\n    if (isSupported) {\n      const eventListener = (event) => savedHandler.current(event);\n      element.addEventListener(eventName, eventListener);\n      return (() => {\n        element.removeEventListener(eventName, eventListener);\n      });\n    }\n    return null;\n  }, [eventName, element]);\n};\n\nexport default useEventListener;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport useEventListener from '../hooks/useEventListener';\nimport ChevronIcon from '../assets/icons/downchevron.svg';\n\nconst Select = ({ ContainerComponent, options, className }) => {\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const selectRef = useRef();\n\n  const clickEventHandler = (e) => {\n    if (!selectRef.current.contains(e.target)) {\n      setIsMenuVisible(false);\n    }\n  };\n\n  useEventListener('click', clickEventHandler, document.getElementsByTagName('html')[0]);\n  return (\n    <div ref={selectRef} className={className}>\n      <button\n        className={`transition-all duration-200 border-2 border-solid border-green-500\n        bg-white hover:bg-green-100 rounded-lg w-full h-full`}\n        type=\"button\"\n        onClick={() => setIsMenuVisible(!isMenuVisible)}\n        data-test=\"select-actions\"\n      >\n        <div className=\"flex space-x-2 justify-center items-center\">\n          <ContainerComponent />\n          <ChevronIcon />\n        </div>\n      </button>\n      {isMenuVisible ? (\n        <div className=\"border border-solid border-gray-400 bg-white absolute w-48 rounded-lg py-1 mt-2 shadow-md\">\n          {map(options, ({ label, onSelect }) => (\n            <button\n              type=\"button\"\n              onClick={() => {\n                setIsMenuVisible(false);\n                onSelect();\n              }}\n              className=\"relative pl-4 py-2 hover:bg-gray-200 w-full cursor-pointer text-left\"\n            >\n              {label}\n            </button>\n          ))}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nSelect.propTypes = {\n  ContainerComponent: PropTypes.node.isRequired,\n  options: PropTypes.arrayOf(PropTypes.objectOf(['value', 'label', 'onSelect'])).isRequired,\n  className: PropTypes.string,\n};\n\nSelect.defaultProps = {\n  className: '',\n};\n\nexport default Select;\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\n\nexports._sbcs = SBCSCodec;\n\nfunction SBCSCodec(codecOptions, iconv) {\n  if (!codecOptions) throw new Error(\"SBCS codec is called without the data.\"); // Prepare char buffer for decoding.\n\n  if (!codecOptions.chars || codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256) throw new Error(\"Encoding '\" + codecOptions.type + \"' has incorrect 'chars' (must be of len 128 or 256)\");\n\n  if (codecOptions.chars.length === 128) {\n    var asciiString = \"\";\n\n    for (var i = 0; i < 128; i++) {\n      asciiString += String.fromCharCode(i);\n    }\n\n    codecOptions.chars = asciiString + codecOptions.chars;\n  }\n\n  this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2'); // Encoding buffer.\n\n  var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n  for (var i = 0; i < codecOptions.chars.length; i++) {\n    encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n  }\n\n  this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\nfunction SBCSEncoder(options, codec) {\n  this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function (str) {\n  var buf = Buffer.alloc(str.length);\n\n  for (var i = 0; i < str.length; i++) {\n    buf[i] = this.encodeBuf[str.charCodeAt(i)];\n  }\n\n  return buf;\n};\n\nSBCSEncoder.prototype.end = function () {};\n\nfunction SBCSDecoder(options, codec) {\n  this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function (buf) {\n  // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n  var decodeBuf = this.decodeBuf;\n  var newBuf = Buffer.alloc(buf.length * 2);\n  var idx1 = 0,\n      idx2 = 0;\n\n  for (var i = 0; i < buf.length; i++) {\n    idx1 = buf[i] * 2;\n    idx2 = i * 2;\n    newBuf[idx2] = decodeBuf[idx1];\n    newBuf[idx2 + 1] = decodeBuf[idx1 + 1];\n  }\n\n  return newBuf.toString('ucs2');\n};\n\nSBCSDecoder.prototype.end = function () {};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n    case 'raw':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n\n      default:\n        if (retried) return; // undefined\n\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n}\n\n; // Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\n\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n} // StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\n\n\nexports.StringDecoder = StringDecoder;\n\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End; // Returns only complete characters in a Buffer\n\nStringDecoder.prototype.text = utf8Text; // Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\n\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n}; // Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\n\n\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n} // Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\n\n\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n\n    return nb;\n  }\n\n  return 0;\n} // Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\n\n\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return \"\\uFFFD\";\n  }\n\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return \"\\uFFFD\";\n    }\n\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return \"\\uFFFD\";\n      }\n    }\n  }\n} // Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\n\n\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n} // Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\n\n\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n} // For UTF-8, a replacement character is added when ending on a partial\n// character.\n\n\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + \"\\uFFFD\";\n  return r;\n} // UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\n\n\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n\n    return r;\n  }\n\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n} // For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\n\n\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n} // Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\n\n\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","\"use strict\"; // Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\n\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F !\\\"#$\\u066A&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7F\\xB0\\xB7\\u2219\\u221A\\u2592\\u2500\\u2502\\u253C\\u2524\\u252C\\u251C\\u2534\\u2510\\u250C\\u2514\\u2518\\u03B2\\u221E\\u03C6\\xB1\\xBD\\xBC\\u2248\\xAB\\xBB\\uFEF7\\uFEF8\\uFFFD\\uFFFD\\uFEFB\\uFEFC\\uFFFD\\xA0\\xAD\\uFE82\\xA3\\xA4\\uFE84\\uFFFD\\uFFFD\\uFE8E\\uFE8F\\uFE95\\uFE99\\u060C\\uFE9D\\uFEA1\\uFEA5\\u0660\\u0661\\u0662\\u0663\\u0664\\u0665\\u0666\\u0667\\u0668\\u0669\\uFED1\\u061B\\uFEB1\\uFEB5\\uFEB9\\u061F\\xA2\\uFE80\\uFE81\\uFE83\\uFE85\\uFECA\\uFE8B\\uFE8D\\uFE91\\uFE93\\uFE97\\uFE9B\\uFE9F\\uFEA3\\uFEA7\\uFEA9\\uFEAB\\uFEAD\\uFEAF\\uFEB3\\uFEB7\\uFEBB\\uFEBF\\uFEC1\\uFEC5\\uFECB\\uFECF\\xA6\\xAC\\xF7\\xD7\\uFEC9\\u0640\\uFED3\\uFED7\\uFEDB\\uFEDF\\uFEE3\\uFEE7\\uFEEB\\uFEED\\uFEEF\\uFEF3\\uFEBD\\uFECC\\uFECE\\uFECD\\uFEE1\\uFE7D\\u0651\\uFEE5\\uFEE9\\uFEEC\\uFEF0\\uFEF2\\uFED0\\uFED5\\uFEF5\\uFEF6\\uFEDD\\uFED9\\uFEF1\\u25A0\\uFFFD\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\xDA\\u1EE4\\x03\\u1EEA\\u1EEC\\u1EEE\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\u1EE8\\u1EF0\\u1EF2\\u1EF6\\u1EF8\\xDD\\u1EF4\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7F\\xC0\\u1EA2\\xC3\\xC1\\u1EA0\\u1EB6\\u1EAC\\xC8\\u1EBA\\u1EBC\\xC9\\u1EB8\\u1EC6\\xCC\\u1EC8\\u0128\\xCD\\u1ECA\\xD2\\u1ECE\\xD5\\xD3\\u1ECC\\u1ED8\\u1EDC\\u1EDE\\u1EE0\\u1EDA\\u1EE2\\xD9\\u1EE6\\u0168\\xA0\\u0102\\xC2\\xCA\\xD4\\u01A0\\u01AF\\u0110\\u0103\\xE2\\xEA\\xF4\\u01A1\\u01B0\\u0111\\u1EB0\\u0300\\u0309\\u0303\\u0301\\u0323\\xE0\\u1EA3\\xE3\\xE1\\u1EA1\\u1EB2\\u1EB1\\u1EB3\\u1EB5\\u1EAF\\u1EB4\\u1EAE\\u1EA6\\u1EA8\\u1EAA\\u1EA4\\u1EC0\\u1EB7\\u1EA7\\u1EA9\\u1EAB\\u1EA5\\u1EAD\\xE8\\u1EC2\\u1EBB\\u1EBD\\xE9\\u1EB9\\u1EC1\\u1EC3\\u1EC5\\u1EBF\\u1EC7\\xEC\\u1EC9\\u1EC4\\u1EBE\\u1ED2\\u0129\\xED\\u1ECB\\xF2\\u1ED4\\u1ECF\\xF5\\xF3\\u1ECD\\u1ED3\\u1ED5\\u1ED7\\u1ED1\\u1ED9\\u1EDD\\u1EDF\\u1EE1\\u1EDB\\u1EE3\\xF9\\u1ED6\\u1EE7\\u0169\\xFA\\u1EE5\\u1EEB\\u1EED\\u1EEF\\u1EE9\\u1EF1\\u1EF3\\u1EF7\\u1EF9\\xFD\\u1EF5\\u1ED0\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\x01\\u1EB2\\x03\\x04\\u1EB4\\u1EAA\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\x11\\x12\\x13\\u1EF6\\x15\\x16\\x17\\x18\\u1EF8\\x1A\\x1B\\x1C\\x1D\\u1EF4\\x1F !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7F\\u1EA0\\u1EAE\\u1EB0\\u1EB6\\u1EA4\\u1EA6\\u1EA8\\u1EAC\\u1EBC\\u1EB8\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EE2\\u1EDA\\u1EDC\\u1EDE\\u1ECA\\u1ECE\\u1ECC\\u1EC8\\u1EE6\\u0168\\u1EE4\\u1EF2\\xD5\\u1EAF\\u1EB1\\u1EB7\\u1EA5\\u1EA7\\u1EA9\\u1EAD\\u1EBD\\u1EB9\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1EE0\\u01A0\\u1ED9\\u1EDD\\u1EDF\\u1ECB\\u1EF0\\u1EE8\\u1EEA\\u1EEC\\u01A1\\u1EDB\\u01AF\\xC0\\xC1\\xC2\\xC3\\u1EA2\\u0102\\u1EB3\\u1EB5\\xC8\\xC9\\xCA\\u1EBA\\xCC\\xCD\\u0128\\u1EF3\\u0110\\u1EE9\\xD2\\xD3\\xD4\\u1EA1\\u1EF7\\u1EEB\\u1EED\\xD9\\xDA\\u1EF9\\u1EF5\\xDD\\u1EE1\\u01B0\\xE0\\xE1\\xE2\\xE3\\u1EA3\\u0103\\u1EEF\\u1EAB\\xE8\\xE9\\xEA\\u1EBB\\xEC\\xED\\u0129\\u1EC9\\u0111\\u1EF1\\xF2\\xF3\\xF4\\xF5\\u1ECF\\u1ECD\\u1EE5\\xF9\\xFA\\u0169\\u1EE7\\xFD\\u1EE3\\u1EEE\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F !\\\"#\\xA5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}\\u203E\\x7F\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\0\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\b\\t\\n\\x0B\\f\\r\\x0E\\x0F\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1A\\x1B\\x1C\\x1D\\x1E\\x1F !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\xA5]^_`abcdefghijklmnopqrstuvwxyz{|}\\u203E\\x7F\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n};","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer; // alternative to using Object.keys for old browsers\n\nfunction copyProps(src, dst) {\n  for (var key in src) {\n    dst[key] = src[key];\n  }\n}\n\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer;\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports);\n  exports.Buffer = SafeBuffer;\n}\n\nfunction SafeBuffer(arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length);\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype); // Copy static methods from Buffer\n\ncopyProps(Buffer, SafeBuffer);\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number');\n  }\n\n  return Buffer(arg, encodingOrOffset, length);\n};\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  var buf = Buffer(size);\n\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n  } else {\n    buf.fill(0);\n  }\n\n  return buf;\n};\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return Buffer(size);\n};\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number');\n  }\n\n  return buffer.SlowBuffer(size);\n};","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\n\nexports._dbcs = DBCSCodec;\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++) {\n  UNASSIGNED_NODE[i] = UNASSIGNED;\n} // Class DBCSCodec reads and initializes mapping tables.\n\n\nfunction DBCSCodec(codecOptions, iconv) {\n  this.encodingName = codecOptions.encodingName;\n  if (!codecOptions) throw new Error(\"DBCS codec is called without the data.\");\n  if (!codecOptions.table) throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\"); // Load tables.\n\n  var mappingTable = codecOptions.table(); // Decode tables: MBCS -> Unicode.\n  // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n  // Trie root is decodeTables[0].\n  // Values: >=  0 -> unicode character code. can be > 0xFFFF\n  //         == UNASSIGNED -> unknown/unassigned sequence.\n  //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n  //         <= NODE_START -> index of the next node in our trie to process next byte.\n  //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n\n  this.decodeTables = [];\n  this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n  // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n\n  this.decodeTableSeq = []; // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n\n  for (var i = 0; i < mappingTable.length; i++) {\n    this._addDecodeChunk(mappingTable[i]);\n  }\n\n  this.defaultCharUnicode = iconv.defaultCharUnicode; // Encode tables: Unicode -> DBCS.\n  // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n  // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n  // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n  //         == UNASSIGNED -> no conversion found. Output a default char.\n  //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n\n  this.encodeTable = []; // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n  // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n  // means end of sequence (needed when one sequence is a strict subsequence of another).\n  // Objects are kept separately from encodeTable to increase performance.\n\n  this.encodeTableSeq = []; // Some chars can be decoded, but need not be encoded.\n\n  var skipEncodeChars = {};\n  if (codecOptions.encodeSkipVals) for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n    var val = codecOptions.encodeSkipVals[i];\n    if (typeof val === 'number') skipEncodeChars[val] = true;else for (var j = val.from; j <= val.to; j++) {\n      skipEncodeChars[j] = true;\n    }\n  } // Use decode trie to recursively fill out encode tables.\n\n  this._fillEncodeTable(0, 0, skipEncodeChars); // Add more encoding pairs when needed.\n\n\n  if (codecOptions.encodeAdd) {\n    for (var uChar in codecOptions.encodeAdd) {\n      if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar)) this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n  }\n\n  this.defCharSB = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n  if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n  if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0); // Load & create GB18030 tables when needed.\n\n  if (typeof codecOptions.gb18030 === 'function') {\n    this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n    // Add GB18030 decode tables.\n\n    var thirdByteNodeIdx = this.decodeTables.length;\n    var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n    var fourthByteNodeIdx = this.decodeTables.length;\n    var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n    for (var i = 0x81; i <= 0xFE; i++) {\n      var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n      var secondByteNode = this.decodeTables[secondByteNodeIdx];\n\n      for (var j = 0x30; j <= 0x39; j++) {\n        secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n      }\n    }\n\n    for (var i = 0x81; i <= 0xFE; i++) {\n      thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n    }\n\n    for (var i = 0x30; i <= 0x39; i++) {\n      fourthByteNode[i] = GB18030_CODE;\n    }\n  }\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder; // Decoder helpers\n\nDBCSCodec.prototype._getDecodeTrieNode = function (addr) {\n  var bytes = [];\n\n  for (; addr > 0; addr >>= 8) {\n    bytes.push(addr & 0xFF);\n  }\n\n  if (bytes.length == 0) bytes.push(0);\n  var node = this.decodeTables[0];\n\n  for (var i = bytes.length - 1; i > 0; i--) {\n    // Traverse nodes deeper into the trie.\n    var val = node[bytes[i]];\n\n    if (val == UNASSIGNED) {\n      // Create new node.\n      node[bytes[i]] = NODE_START - this.decodeTables.length;\n      this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n    } else if (val <= NODE_START) {\n      // Existing node.\n      node = this.decodeTables[NODE_START - val];\n    } else throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n  }\n\n  return node;\n};\n\nDBCSCodec.prototype._addDecodeChunk = function (chunk) {\n  // First element of chunk is the hex mbcs code where we start.\n  var curAddr = parseInt(chunk[0], 16); // Choose the decoding node where we'll write our chars.\n\n  var writeTable = this._getDecodeTrieNode(curAddr);\n\n  curAddr = curAddr & 0xFF; // Write all other elements of the chunk to the table.\n\n  for (var k = 1; k < chunk.length; k++) {\n    var part = chunk[k];\n\n    if (typeof part === \"string\") {\n      // String, write as-is.\n      for (var l = 0; l < part.length;) {\n        var code = part.charCodeAt(l++);\n\n        if (0xD800 <= code && code < 0xDC00) {\n          // Decode surrogate\n          var codeTrail = part.charCodeAt(l++);\n          if (0xDC00 <= codeTrail && codeTrail < 0xE000) writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);else throw new Error(\"Incorrect surrogate pair in \" + this.encodingName + \" at chunk \" + chunk[0]);\n        } else if (0x0FF0 < code && code <= 0x0FFF) {\n          // Character sequence (our own encoding used)\n          var len = 0xFFF - code + 2;\n          var seq = [];\n\n          for (var m = 0; m < len; m++) {\n            seq.push(part.charCodeAt(l++));\n          } // Simple variation: don't support surrogates or subsequences in seq.\n\n\n          writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n          this.decodeTableSeq.push(seq);\n        } else writeTable[curAddr++] = code; // Basic char\n\n      }\n    } else if (typeof part === \"number\") {\n      // Integer, meaning increasing sequence starting with prev character.\n      var charCode = writeTable[curAddr - 1] + 1;\n\n      for (var l = 0; l < part; l++) {\n        writeTable[curAddr++] = charCode++;\n      }\n    } else throw new Error(\"Incorrect type '\" + typeof part + \"' given in \" + this.encodingName + \" at chunk \" + chunk[0]);\n  }\n\n  if (curAddr > 0xFF) throw new Error(\"Incorrect chunk in \" + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}; // Encoder helpers\n\n\nDBCSCodec.prototype._getEncodeBucket = function (uCode) {\n  var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n\n  if (this.encodeTable[high] === undefined) this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n\n  return this.encodeTable[high];\n};\n\nDBCSCodec.prototype._setEncodeChar = function (uCode, dbcsCode) {\n  var bucket = this._getEncodeBucket(uCode);\n\n  var low = uCode & 0xFF;\n  if (bucket[low] <= SEQ_START) this.encodeTableSeq[SEQ_START - bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n  else if (bucket[low] == UNASSIGNED) bucket[low] = dbcsCode;\n};\n\nDBCSCodec.prototype._setEncodeSequence = function (seq, dbcsCode) {\n  // Get the root of character tree according to first character of the sequence.\n  var uCode = seq[0];\n\n  var bucket = this._getEncodeBucket(uCode);\n\n  var low = uCode & 0xFF;\n  var node;\n\n  if (bucket[low] <= SEQ_START) {\n    // There's already a sequence with  - use it.\n    node = this.encodeTableSeq[SEQ_START - bucket[low]];\n  } else {\n    // There was no sequence object - allocate a new one.\n    node = {};\n    if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n\n    bucket[low] = SEQ_START - this.encodeTableSeq.length;\n    this.encodeTableSeq.push(node);\n  } // Traverse the character tree, allocating new nodes as needed.\n\n\n  for (var j = 1; j < seq.length - 1; j++) {\n    var oldVal = node[uCode];\n    if (typeof oldVal === 'object') node = oldVal;else {\n      node = node[uCode] = {};\n      if (oldVal !== undefined) node[DEF_CHAR] = oldVal;\n    }\n  } // Set the leaf to given dbcsCode.\n\n\n  uCode = seq[seq.length - 1];\n  node[uCode] = dbcsCode;\n};\n\nDBCSCodec.prototype._fillEncodeTable = function (nodeIdx, prefix, skipEncodeChars) {\n  var node = this.decodeTables[nodeIdx];\n\n  for (var i = 0; i < 0x100; i++) {\n    var uCode = node[i];\n    var mbCode = prefix + i;\n    if (skipEncodeChars[mbCode]) continue;\n    if (uCode >= 0) this._setEncodeChar(uCode, mbCode);else if (uCode <= NODE_START) this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);else if (uCode <= SEQ_START) this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n  }\n}; // == Encoder ==================================================================\n\n\nfunction DBCSEncoder(options, codec) {\n  // Encoder state\n  this.leadSurrogate = -1;\n  this.seqObj = undefined; // Static data\n\n  this.encodeTable = codec.encodeTable;\n  this.encodeTableSeq = codec.encodeTableSeq;\n  this.defaultCharSingleByte = codec.defCharSB;\n  this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function (str) {\n  var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n      leadSurrogate = this.leadSurrogate,\n      seqObj = this.seqObj,\n      nextChar = -1,\n      i = 0,\n      j = 0;\n\n  while (true) {\n    // 0. Get next character.\n    if (nextChar === -1) {\n      if (i == str.length) break;\n      var uCode = str.charCodeAt(i++);\n    } else {\n      var uCode = nextChar;\n      nextChar = -1;\n    } // 1. Handle surrogates.\n\n\n    if (0xD800 <= uCode && uCode < 0xE000) {\n      // Char is one of surrogates.\n      if (uCode < 0xDC00) {\n        // We've got lead surrogate.\n        if (leadSurrogate === -1) {\n          leadSurrogate = uCode;\n          continue;\n        } else {\n          leadSurrogate = uCode; // Double lead surrogate found.\n\n          uCode = UNASSIGNED;\n        }\n      } else {\n        // We've got trail surrogate.\n        if (leadSurrogate !== -1) {\n          uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n          leadSurrogate = -1;\n        } else {\n          // Incomplete surrogate pair - only trail surrogate found.\n          uCode = UNASSIGNED;\n        }\n      }\n    } else if (leadSurrogate !== -1) {\n      // Incomplete surrogate pair - only lead surrogate found.\n      nextChar = uCode;\n      uCode = UNASSIGNED; // Write an error, then current char.\n\n      leadSurrogate = -1;\n    } // 2. Convert uCode character.\n\n\n    var dbcsCode = UNASSIGNED;\n\n    if (seqObj !== undefined && uCode != UNASSIGNED) {\n      // We are in the middle of the sequence\n      var resCode = seqObj[uCode];\n\n      if (typeof resCode === 'object') {\n        // Sequence continues.\n        seqObj = resCode;\n        continue;\n      } else if (typeof resCode == 'number') {\n        // Sequence finished. Write it.\n        dbcsCode = resCode;\n      } else if (resCode == undefined) {\n        // Current character is not part of the sequence.\n        // Try default character for this sequence\n        resCode = seqObj[DEF_CHAR];\n\n        if (resCode !== undefined) {\n          dbcsCode = resCode; // Found. Write it.\n\n          nextChar = uCode; // Current character will be written too in the next iteration.\n        } else {// TODO: What if we have no default? (resCode == undefined)\n            // Then, we should write first char of the sequence as-is and try the rest recursively.\n            // Didn't do it for now because no encoding has this situation yet.\n            // Currently, just skip the sequence and write current char.\n          }\n      }\n\n      seqObj = undefined;\n    } else if (uCode >= 0) {\n      // Regular character\n      var subtable = this.encodeTable[uCode >> 8];\n      if (subtable !== undefined) dbcsCode = subtable[uCode & 0xFF];\n\n      if (dbcsCode <= SEQ_START) {\n        // Sequence start\n        seqObj = this.encodeTableSeq[SEQ_START - dbcsCode];\n        continue;\n      }\n\n      if (dbcsCode == UNASSIGNED && this.gb18030) {\n        // Use GB18030 algorithm to find character(s) to write.\n        var idx = findIdx(this.gb18030.uChars, uCode);\n\n        if (idx != -1) {\n          var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n          newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600);\n          dbcsCode = dbcsCode % 12600;\n          newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260);\n          dbcsCode = dbcsCode % 1260;\n          newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10);\n          dbcsCode = dbcsCode % 10;\n          newBuf[j++] = 0x30 + dbcsCode;\n          continue;\n        }\n      }\n    } // 3. Write dbcsCode character.\n\n\n    if (dbcsCode === UNASSIGNED) dbcsCode = this.defaultCharSingleByte;\n\n    if (dbcsCode < 0x100) {\n      newBuf[j++] = dbcsCode;\n    } else if (dbcsCode < 0x10000) {\n      newBuf[j++] = dbcsCode >> 8; // high byte\n\n      newBuf[j++] = dbcsCode & 0xFF; // low byte\n    } else {\n      newBuf[j++] = dbcsCode >> 16;\n      newBuf[j++] = dbcsCode >> 8 & 0xFF;\n      newBuf[j++] = dbcsCode & 0xFF;\n    }\n  }\n\n  this.seqObj = seqObj;\n  this.leadSurrogate = leadSurrogate;\n  return newBuf.slice(0, j);\n};\n\nDBCSEncoder.prototype.end = function () {\n  if (this.leadSurrogate === -1 && this.seqObj === undefined) return; // All clean. Most often case.\n\n  var newBuf = Buffer.alloc(10),\n      j = 0;\n\n  if (this.seqObj) {\n    // We're in the sequence.\n    var dbcsCode = this.seqObj[DEF_CHAR];\n\n    if (dbcsCode !== undefined) {\n      // Write beginning of the sequence.\n      if (dbcsCode < 0x100) {\n        newBuf[j++] = dbcsCode;\n      } else {\n        newBuf[j++] = dbcsCode >> 8; // high byte\n\n        newBuf[j++] = dbcsCode & 0xFF; // low byte\n      }\n    } else {// See todo above.\n      }\n\n    this.seqObj = undefined;\n  }\n\n  if (this.leadSurrogate !== -1) {\n    // Incomplete surrogate pair - only lead surrogate found.\n    newBuf[j++] = this.defaultCharSingleByte;\n    this.leadSurrogate = -1;\n  }\n\n  return newBuf.slice(0, j);\n}; // Export for testing\n\n\nDBCSEncoder.prototype.findIdx = findIdx; // == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n  // Decoder state\n  this.nodeIdx = 0;\n  this.prevBuf = Buffer.alloc(0); // Static data\n\n  this.decodeTables = codec.decodeTables;\n  this.decodeTableSeq = codec.decodeTableSeq;\n  this.defaultCharUnicode = codec.defaultCharUnicode;\n  this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function (buf) {\n  var newBuf = Buffer.alloc(buf.length * 2),\n      nodeIdx = this.nodeIdx,\n      prevBuf = this.prevBuf,\n      prevBufOffset = this.prevBuf.length,\n      seqStart = -this.prevBuf.length,\n      // idx of the start of current parsed sequence.\n  uCode;\n  if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n    prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n\n  for (var i = 0, j = 0; i < buf.length; i++) {\n    var curByte = i >= 0 ? buf[i] : prevBuf[i + prevBufOffset]; // Lookup in current trie node.\n\n    var uCode = this.decodeTables[nodeIdx][curByte];\n\n    if (uCode >= 0) {// Normal character, just use it.\n    } else if (uCode === UNASSIGNED) {\n      // Unknown char.\n      // TODO: Callback with seq.\n      //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n      i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n\n      uCode = this.defaultCharUnicode.charCodeAt(0);\n    } else if (uCode === GB18030_CODE) {\n      var curSeq = seqStart >= 0 ? buf.slice(seqStart, i + 1) : prevBuf.slice(seqStart + prevBufOffset, i + 1 + prevBufOffset);\n      var ptr = (curSeq[0] - 0x81) * 12600 + (curSeq[1] - 0x30) * 1260 + (curSeq[2] - 0x81) * 10 + (curSeq[3] - 0x30);\n      var idx = findIdx(this.gb18030.gbChars, ptr);\n      uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n    } else if (uCode <= NODE_START) {\n      // Go to next trie node.\n      nodeIdx = NODE_START - uCode;\n      continue;\n    } else if (uCode <= SEQ_START) {\n      // Output a sequence of chars.\n      var seq = this.decodeTableSeq[SEQ_START - uCode];\n\n      for (var k = 0; k < seq.length - 1; k++) {\n        uCode = seq[k];\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n      }\n\n      uCode = seq[seq.length - 1];\n    } else throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte); // Write the character to buffer, handling higher planes using surrogate pair.\n\n\n    if (uCode > 0xFFFF) {\n      uCode -= 0x10000;\n      var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n      newBuf[j++] = uCodeLead & 0xFF;\n      newBuf[j++] = uCodeLead >> 8;\n      uCode = 0xDC00 + uCode % 0x400;\n    }\n\n    newBuf[j++] = uCode & 0xFF;\n    newBuf[j++] = uCode >> 8; // Reset trie node.\n\n    nodeIdx = 0;\n    seqStart = i + 1;\n  }\n\n  this.nodeIdx = nodeIdx;\n  this.prevBuf = seqStart >= 0 ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n  return newBuf.slice(0, j).toString('ucs2');\n};\n\nDBCSDecoder.prototype.end = function () {\n  var ret = ''; // Try to parse all remaining chars.\n\n  while (this.prevBuf.length > 0) {\n    // Skip 1 character in the buffer.\n    ret += this.defaultCharUnicode;\n    var buf = this.prevBuf.slice(1); // Parse remaining as usual.\n\n    this.prevBuf = Buffer.alloc(0);\n    this.nodeIdx = 0;\n    if (buf.length > 0) ret += this.write(buf);\n  }\n\n  this.nodeIdx = 0;\n  return ret;\n}; // Binary search for GB18030. Returns largest i such that table[i] <= val.\n\n\nfunction findIdx(table, val) {\n  if (table[0] > val) return -1;\n  var l = 0,\n      r = table.length;\n\n  while (l < r - 1) {\n    // always table[l] <= val < table[r]\n    var mid = l + Math.floor((r - l + 1) / 2);\n    if (table[mid] <= val) l = mid;else r = mid;\n  }\n\n  return l;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NoWord = ({ word, showAddWordModal, setDefaultValues }) => (\n  <div className=\"flex flex-col text-center items-center space-y-5 py-5\">\n    <h1 className=\"text-2xl text-gray-800 font-bold\">{`Sorry, we don't have ${word}`}</h1>\n    {process.env.NODE_ENV !== 'production' ? (\n      <>\n        <h2 className=\"text-xl text-gray-800\">Think this word should be included?</h2>\n        <h2 className=\"text-xl text-gray-800\">Define it!</h2>\n        <button\n          type=\"button\"\n          data-test=\"define-word-button\"\n          className=\"transition-all duration-200 bg-green-700 hover:bg-green-600 text-white px-10 py-3 rounded-md\"\n          onClick={() => {\n            setDefaultValues({ word });\n            showAddWordModal();\n          }}\n        >\n          {`Define ${word}`}\n        </button>\n      </>\n    ) : null}\n  </div>\n);\n\nNoWord.propTypes = {\n  word: PropTypes.string.isRequired,\n  showAddWordModal: PropTypes.func,\n  setDefaultValues: PropTypes.func,\n};\n\nNoWord.defaultProps = {\n  showAddWordModal: () => {},\n  setDefaultValues: () => {},\n};\n\nexport default NoWord;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","\"use strict\"; // Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\n\nvar modules = [require(\"./internal\"), require(\"./utf16\"), require(\"./utf7\"), require(\"./sbcs-codec\"), require(\"./sbcs-data\"), require(\"./sbcs-data-generated\"), require(\"./dbcs-codec\"), require(\"./dbcs-data\")]; // Put all encoding/alias/codec definitions to single object and export it. \n\nfor (var i = 0; i < modules.length; i++) {\n  var module = modules[i];\n\n  for (var enc in module) {\n    if (Object.prototype.hasOwnProperty.call(module, enc)) exports[enc] = module[enc];\n  }\n}","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n// == UTF16-BE codec. ==========================================================\n\n\nexports.utf16be = Utf16BECodec;\n\nfunction Utf16BECodec() {}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true; // -- Encoding\n\nfunction Utf16BEEncoder() {}\n\nUtf16BEEncoder.prototype.write = function (str) {\n  var buf = Buffer.from(str, 'ucs2');\n\n  for (var i = 0; i < buf.length; i += 2) {\n    var tmp = buf[i];\n    buf[i] = buf[i + 1];\n    buf[i + 1] = tmp;\n  }\n\n  return buf;\n};\n\nUtf16BEEncoder.prototype.end = function () {}; // -- Decoding\n\n\nfunction Utf16BEDecoder() {\n  this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function (buf) {\n  if (buf.length == 0) return '';\n  var buf2 = Buffer.alloc(buf.length + 1),\n      i = 0,\n      j = 0;\n\n  if (this.overflowByte !== -1) {\n    buf2[0] = buf[0];\n    buf2[1] = this.overflowByte;\n    i = 1;\n    j = 2;\n  }\n\n  for (; i < buf.length - 1; i += 2, j += 2) {\n    buf2[j] = buf[i + 1];\n    buf2[j + 1] = buf[i];\n  }\n\n  this.overflowByte = i == buf.length - 1 ? buf[buf.length - 1] : -1;\n  return buf2.slice(0, j).toString('ucs2');\n};\n\nUtf16BEDecoder.prototype.end = function () {}; // == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\n\nexports.utf16 = Utf16Codec;\n\nfunction Utf16Codec(codecOptions, iconv) {\n  this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder; // -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n  options = options || {};\n  if (options.addBOM === undefined) options.addBOM = true;\n  this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function (str) {\n  return this.encoder.write(str);\n};\n\nUtf16Encoder.prototype.end = function () {\n  return this.encoder.end();\n}; // -- Decoding\n\n\nfunction Utf16Decoder(options, codec) {\n  this.decoder = null;\n  this.initialBytes = [];\n  this.initialBytesLen = 0;\n  this.options = options || {};\n  this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function (buf) {\n  if (!this.decoder) {\n    // Codec is not chosen yet. Accumulate initial bytes.\n    this.initialBytes.push(buf);\n    this.initialBytesLen += buf.length;\n    if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n      return ''; // We have enough bytes -> detect endianness.\n\n    var buf = Buffer.concat(this.initialBytes),\n        encoding = detectEncoding(buf, this.options.defaultEncoding);\n    this.decoder = this.iconv.getDecoder(encoding, this.options);\n    this.initialBytes.length = this.initialBytesLen = 0;\n  }\n\n  return this.decoder.write(buf);\n};\n\nUtf16Decoder.prototype.end = function () {\n  if (!this.decoder) {\n    var buf = Buffer.concat(this.initialBytes),\n        encoding = detectEncoding(buf, this.options.defaultEncoding);\n    this.decoder = this.iconv.getDecoder(encoding, this.options);\n    var res = this.decoder.write(buf),\n        trail = this.decoder.end();\n    return trail ? res + trail : res;\n  }\n\n  return this.decoder.end();\n};\n\nfunction detectEncoding(buf, defaultEncoding) {\n  var enc = defaultEncoding || 'utf-16le';\n\n  if (buf.length >= 2) {\n    // Check BOM.\n    if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n      enc = 'utf-16be';else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n      enc = 'utf-16le';else {\n      // No BOM found. Try to deduce encoding from initial content.\n      // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n      // So, we count ASCII as if it was LE or BE, and decide from that.\n      var asciiCharsLE = 0,\n          asciiCharsBE = 0,\n          // Counts of chars in both positions\n      _len = Math.min(buf.length - buf.length % 2, 64); // Len is always even.\n\n\n      for (var i = 0; i < _len; i += 2) {\n        if (buf[i] === 0 && buf[i + 1] !== 0) asciiCharsBE++;\n        if (buf[i] !== 0 && buf[i + 1] === 0) asciiCharsLE++;\n      }\n\n      if (asciiCharsBE > asciiCharsLE) enc = 'utf-16be';else if (asciiCharsBE < asciiCharsLE) enc = 'utf-16le';\n    }\n  }\n\n  return enc;\n}","\"use strict\"; // Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports; // All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\n\n\niconv.encodings = null; // Characters emitted in case of error.\n\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?'; // Public API.\n\niconv.encode = function encode(str, encoding, options) {\n  str = \"\" + (str || \"\"); // Ensure string.\n\n  var encoder = iconv.getEncoder(encoding, options);\n  var res = encoder.write(str);\n  var trail = encoder.end();\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};\n\niconv.decode = function decode(buf, encoding, options) {\n  if (typeof buf === 'string') {\n    if (!iconv.skipDecodeWarning) {\n      console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n      iconv.skipDecodeWarning = true;\n    }\n\n    buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n  }\n\n  var decoder = iconv.getDecoder(encoding, options);\n  var res = decoder.write(buf);\n  var trail = decoder.end();\n  return trail ? res + trail : res;\n};\n\niconv.encodingExists = function encodingExists(enc) {\n  try {\n    iconv.getCodec(enc);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}; // Legacy aliases to convert functions\n\n\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode; // Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\n\niconv._codecDataCache = {};\n\niconv.getCodec = function getCodec(encoding) {\n  if (!iconv.encodings) iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n\n  var enc = iconv._canonicalizeEncoding(encoding); // Traverse iconv.encodings to find actual codec.\n\n\n  var codecOptions = {};\n\n  while (true) {\n    var codec = iconv._codecDataCache[enc];\n    if (codec) return codec;\n    var codecDef = iconv.encodings[enc];\n\n    switch (typeof codecDef) {\n      case \"string\":\n        // Direct alias to other encoding.\n        enc = codecDef;\n        break;\n\n      case \"object\":\n        // Alias with options. Can be layered.\n        for (var key in codecDef) {\n          codecOptions[key] = codecDef[key];\n        }\n\n        if (!codecOptions.encodingName) codecOptions.encodingName = enc;\n        enc = codecDef.type;\n        break;\n\n      case \"function\":\n        // Codec itself.\n        if (!codecOptions.encodingName) codecOptions.encodingName = enc; // The codec function must load all tables and return object with .encoder and .decoder methods.\n        // It'll be called only once (for each different options object).\n\n        codec = new codecDef(codecOptions, iconv);\n        iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n\n        return codec;\n\n      default:\n        throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\" + enc + \"')\");\n    }\n  }\n};\n\niconv._canonicalizeEncoding = function (encoding) {\n  // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n  return ('' + encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n};\n\niconv.getEncoder = function getEncoder(encoding, options) {\n  var codec = iconv.getCodec(encoding),\n      encoder = new codec.encoder(options, codec);\n  if (codec.bomAware && options && options.addBOM) encoder = new bomHandling.PrependBOM(encoder, options);\n  return encoder;\n};\n\niconv.getDecoder = function getDecoder(encoding, options) {\n  var codec = iconv.getCodec(encoding),\n      decoder = new codec.decoder(options, codec);\n  if (codec.bomAware && !(options && options.stripBOM === false)) decoder = new bomHandling.StripBOM(decoder, options);\n  return decoder;\n}; // Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\n\n\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\n\nif (nodeVer) {\n  // Load streaming support in Node v0.10+\n  var nodeVerArr = nodeVer.split(\".\").map(Number);\n\n  if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n    require(\"./streams\")(iconv);\n  } // Load Node primitive extensions.\n\n\n  require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n  console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","\"use strict\";\n\nvar BOMChar = \"\\uFEFF\";\nexports.PrependBOM = PrependBOMWrapper;\n\nfunction PrependBOMWrapper(encoder, options) {\n  this.encoder = encoder;\n  this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function (str) {\n  if (this.addBOM) {\n    str = BOMChar + str;\n    this.addBOM = false;\n  }\n\n  return this.encoder.write(str);\n};\n\nPrependBOMWrapper.prototype.end = function () {\n  return this.encoder.end();\n}; //------------------------------------------------------------------------------\n\n\nexports.StripBOM = StripBOMWrapper;\n\nfunction StripBOMWrapper(decoder, options) {\n  this.decoder = decoder;\n  this.pass = false;\n  this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function (buf) {\n  var res = this.decoder.write(buf);\n  if (this.pass || !res) return res;\n\n  if (res[0] === BOMChar) {\n    res = res.slice(1);\n    if (typeof this.options.stripBOM === 'function') this.options.stripBOM();\n  }\n\n  this.pass = true;\n  return res;\n};\n\nStripBOMWrapper.prototype.end = function () {\n  return this.decoder.end();\n};","/* eslint-disable node/no-deprecated-api */\n'use strict';\n\nvar buffer = require('buffer');\n\nvar Buffer = buffer.Buffer;\nvar safer = {};\nvar key;\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue;\n  if (key === 'SlowBuffer' || key === 'Buffer') continue;\n  safer[key] = buffer[key];\n}\n\nvar Safer = safer.Buffer = {};\n\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue;\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue;\n  Safer[key] = Buffer[key];\n}\n\nsafer.Buffer.prototype = Buffer.prototype;\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value);\n    }\n\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value);\n    }\n\n    return Buffer(value, encodingOrOffset, length);\n  };\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size);\n    }\n\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n\n    var buf = Buffer(size);\n\n    if (!fill || fill.length === 0) {\n      buf.fill(0);\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n\n    return buf;\n  };\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength;\n  } catch (e) {// we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  };\n\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;\n  }\n}\n\nmodule.exports = safer;","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer; // UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\n\nfunction Utf7Codec(codecOptions, iconv) {\n  this.iconv = iconv;\n}\n\n;\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true; // -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n  this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function (str) {\n  // Naive implementation.\n  // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n  return Buffer.from(str.replace(nonDirectChars, function (chunk) {\n    return \"+\" + (chunk === '+' ? '' : this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) + \"-\";\n  }.bind(this)));\n};\n\nUtf7Encoder.prototype.end = function () {}; // -- Decoding\n\n\nfunction Utf7Decoder(options, codec) {\n  this.iconv = codec.iconv;\n  this.inBase64 = false;\n  this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\n\nfor (var i = 0; i < 256; i++) {\n  base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n}\n\nvar plusChar = '+'.charCodeAt(0),\n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function (buf) {\n  var res = \"\",\n      lastI = 0,\n      inBase64 = this.inBase64,\n      base64Accum = this.base64Accum; // The decoder is more involved as we must handle chunks in stream.\n\n  for (var i = 0; i < buf.length; i++) {\n    if (!inBase64) {\n      // We're in direct mode.\n      // Write direct chars until '+'\n      if (buf[i] == plusChar) {\n        res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n\n        lastI = i + 1;\n        inBase64 = true;\n      }\n    } else {\n      // We decode base64.\n      if (!base64Chars[buf[i]]) {\n        // Base64 ended.\n        if (i == lastI && buf[i] == minusChar) {\n          // \"+-\" -> \"+\"\n          res += \"+\";\n        } else {\n          var b64str = base64Accum + buf.slice(lastI, i).toString();\n          res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n        }\n\n        if (buf[i] != minusChar) // Minus is absorbed after base64.\n          i--;\n        lastI = i + 1;\n        inBase64 = false;\n        base64Accum = '';\n      }\n    }\n  }\n\n  if (!inBase64) {\n    res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n  } else {\n    var b64str = base64Accum + buf.slice(lastI).toString();\n    var canBeDecoded = b64str.length - b64str.length % 8; // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n\n    base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n\n    b64str = b64str.slice(0, canBeDecoded);\n    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n  }\n\n  this.inBase64 = inBase64;\n  this.base64Accum = base64Accum;\n  return res;\n};\n\nUtf7Decoder.prototype.end = function () {\n  var res = \"\";\n  if (this.inBase64 && this.base64Accum.length > 0) res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n  this.inBase64 = false;\n  this.base64Accum = '';\n  return res;\n}; // UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\n\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n  this.iconv = iconv;\n}\n\n;\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true; // -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n  this.iconv = codec.iconv;\n  this.inBase64 = false;\n  this.base64Accum = Buffer.alloc(6);\n  this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function (str) {\n  var inBase64 = this.inBase64,\n      base64Accum = this.base64Accum,\n      base64AccumIdx = this.base64AccumIdx,\n      buf = Buffer.alloc(str.length * 5 + 10),\n      bufIdx = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    var uChar = str.charCodeAt(i);\n\n    if (0x20 <= uChar && uChar <= 0x7E) {\n      // Direct character or '&'.\n      if (inBase64) {\n        if (base64AccumIdx > 0) {\n          bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n          base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n\n        inBase64 = false;\n      }\n\n      if (!inBase64) {\n        buf[bufIdx++] = uChar; // Write direct character\n\n        if (uChar === andChar) // Ampersand -> '&-'\n          buf[bufIdx++] = minusChar;\n      }\n    } else {\n      // Non-direct character\n      if (!inBase64) {\n        buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n\n        inBase64 = true;\n      }\n\n      if (inBase64) {\n        base64Accum[base64AccumIdx++] = uChar >> 8;\n        base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n        if (base64AccumIdx == base64Accum.length) {\n          bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n          base64AccumIdx = 0;\n        }\n      }\n    }\n  }\n\n  this.inBase64 = inBase64;\n  this.base64AccumIdx = base64AccumIdx;\n  return buf.slice(0, bufIdx);\n};\n\nUtf7IMAPEncoder.prototype.end = function () {\n  var buf = Buffer.alloc(10),\n      bufIdx = 0;\n\n  if (this.inBase64) {\n    if (this.base64AccumIdx > 0) {\n      bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n      this.base64AccumIdx = 0;\n    }\n\n    buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n\n    this.inBase64 = false;\n  }\n\n  return buf.slice(0, bufIdx);\n}; // -- Decoding\n\n\nfunction Utf7IMAPDecoder(options, codec) {\n  this.iconv = codec.iconv;\n  this.inBase64 = false;\n  this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function (buf) {\n  var res = \"\",\n      lastI = 0,\n      inBase64 = this.inBase64,\n      base64Accum = this.base64Accum; // The decoder is more involved as we must handle chunks in stream.\n  // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n  for (var i = 0; i < buf.length; i++) {\n    if (!inBase64) {\n      // We're in direct mode.\n      // Write direct chars until '&'\n      if (buf[i] == andChar) {\n        res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n\n        lastI = i + 1;\n        inBase64 = true;\n      }\n    } else {\n      // We decode base64.\n      if (!base64IMAPChars[buf[i]]) {\n        // Base64 ended.\n        if (i == lastI && buf[i] == minusChar) {\n          // \"&-\" -> \"&\"\n          res += \"&\";\n        } else {\n          var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n          res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n        }\n\n        if (buf[i] != minusChar) // Minus may be absorbed after base64.\n          i--;\n        lastI = i + 1;\n        inBase64 = false;\n        base64Accum = '';\n      }\n    }\n  }\n\n  if (!inBase64) {\n    res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n  } else {\n    var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n    var canBeDecoded = b64str.length - b64str.length % 8; // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n\n    base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n\n    b64str = b64str.slice(0, canBeDecoded);\n    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n  }\n\n  this.inBase64 = inBase64;\n  this.base64Accum = base64Accum;\n  return res;\n};\n\nUtf7IMAPDecoder.prototype.end = function () {\n  var res = \"\";\n  if (this.inBase64 && this.base64Accum.length > 0) res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n  this.inBase64 = false;\n  this.base64Accum = '';\n  return res;\n};"],"sourceRoot":""}